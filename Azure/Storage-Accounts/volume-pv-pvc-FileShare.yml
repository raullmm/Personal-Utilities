apiVersion: v1
kind: Secret
metadata:
  name: <secret-name>
  namespace: default
type: Opaque
data:
  azurestorageaccountkey: <key-storageaccount>    
  azurestorageaccountname: <name-storageaccount>

---

kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: <sc-name>
provisioner: file.csi.azure.com 
allowVolumeExpansion: true
mountOptions:    # Add the mount Options that you want
  - dir_mode=0777
  - file_mode=0777
  - uid=1000
  - gid=1000
  - mfsymlinks
  - nobrl
parameters:
  skuName: Premium_LRS # Add the kind of Fileshare 

---

apiVersion: v1
kind: PersistentVolume
metadata:
  annotations:
    pv.kubernetes.io/provisioned-by: file.csi.azure.com
  name: <name_persistentVolume>
spec:
  capacity:
    storage: 100Gi # Add the capacity
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: <sc-name>
  csi:
    driver: file.csi.azure.com
    readOnly: false
    volumeHandle: <storageaccount-fileshare>  
    volumeAttributes:
      resourceGroup: resourceGroupName # Optional in the case that you have the fileshare in another account 
      shareName: <storageaccount-fileshare>
    nodeStageSecretRef:
      name: <secret-name>
      namespace: default
  mountOptions:
    - dir_mode=0777
    - file_mode=0777
    - uid=1000
    - gid=1000
    - mfsymlinks
    - nobrl

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: <PersistentVolumeClaim-name>
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: <sc-name>
  volumeName: 
  resources:
    requests:
      storage: 100Gi
